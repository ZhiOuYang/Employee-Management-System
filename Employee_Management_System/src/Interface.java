
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;

import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author bubbl
 */
public class Interface extends javax.swing.JFrame {
double HourlyWage;
double HoursPerWeek;
int WeeksPerYear;
double YearlySalary;
EmployeeInfo Employee;
int gender;
int locationTempVariable;

int editing = 0;
double tempfulltimeys = 0;
double tempparttime1 = 0;
double tempparttime2 = 0;
int tempparttime3 = 0;



public EmployeeManagementSystem Employees = new EmployeeManagementSystem(5);
//EmployeeManagementSystem.manage.HashTable.Clear();




public void ReadLine(){
	try{
		BufferedReader in = new BufferedReader(new FileReader("Save.txt"));
		String thisLine;
		int FullTime;
		
		while ((thisLine = in.readLine()) != null) {
			String[] info = thisLine.split(",");
			FullTime = Integer.parseInt(info[0]);
			if (FullTime == 0) {
				Employee = new PartTimeEmployee(info[1],info[2],Integer.parseInt(info[3]),Integer.parseInt(info[4]),Integer.parseInt(info[5]),Double.parseDouble(info[6]),Double.parseDouble(info[7]),Double.parseDouble(info[8]),Integer.parseInt(info[9]));
				Employees.add(Employee);
			}
			else{
				Employee = new FullTimeEmployee(info[1],info[2],Integer.parseInt(info[3]),Integer.parseInt(info[4]),Integer.parseInt(info[5]),Double.parseDouble(info[6]),Double.parseDouble(info[7]));
				Employees.add(Employee);
			}
		}
		in.close();
	//PTE:   string string int int int double double double int
	}catch (IOException e){
		e.printStackTrace();
	}
}

    /**
     * Creates new form Interface
     */
    public Interface() {
        initComponents();
        
        ReadLine();
        Employees.display();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Gender = new javax.swing.ButtonGroup();
        Work_Time = new javax.swing.ButtonGroup();
        Location = new javax.swing.ButtonGroup();
        FullTimeEmployeeDialogBox = new javax.swing.JDialog();
        FullTimeEmployeeWindowLabel = new javax.swing.JLabel();
        FullTimeEmployeeWindowYearlySalary = new javax.swing.JTextField();
        FullTimeEmployeeWindowButton = new javax.swing.JButton();
        PartTimeEmployeeDialogBox = new javax.swing.JDialog();
        PartTimeEmployeeWindowLabel1 = new javax.swing.JLabel();
        PartTimeEmployeeWindowHourlyWage = new javax.swing.JTextField();
        PartTimeEmployeeWindowHoursPerWeek = new javax.swing.JTextField();
        PartTimeEmployeeWeeksPerYear = new javax.swing.JTextField();
        PartTimeEmployeeWindowButton = new javax.swing.JButton();
        PartTimeEmployeeWindowLabel2 = new javax.swing.JLabel();
        PartTimeEmployeeWindowLabel3 = new javax.swing.JLabel();
        BarOfTabs = new javax.swing.JTabbedPane();
        SearchEmployee = new javax.swing.JPanel();
        SearchEmployeeEmployeeID = new javax.swing.JLabel();
        SearchEmployeeEmployeeIDTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        SearchEmployeeTextArea = new javax.swing.JTextArea();
        EditEmployee = new javax.swing.JButton();
        RemoveEmployee = new javax.swing.JButton();
        SearchEmployeeSearchButton = new javax.swing.JButton();
        DisplayEmployee = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        DisplayEmployeeTextArea = new javax.swing.JTextArea();
        DisplayEmployeeRefreshButton = new javax.swing.JButton();
        AddEmployee = new javax.swing.JPanel();
        AddEmployeeFirstName = new javax.swing.JLabel();
        AddEmployeeFirstNameTextField = new javax.swing.JTextField();
        AddEmployeeLastName = new javax.swing.JLabel();
        AddEmployeeLastNameTextField = new javax.swing.JTextField();
        AddEmployeeEmployeeID = new javax.swing.JLabel();
        AddEmployeeEmployeeIDTextField = new javax.swing.JTextField();
        AddEmployeeMale = new javax.swing.JToggleButton();
        AddEmployeeFemale = new javax.swing.JToggleButton();
        AddEmployeeGender = new javax.swing.JLabel();
        AddEmployeeWorkTime = new javax.swing.JLabel();
        AddEmployeeFullTime = new javax.swing.JToggleButton();
        AddEmployeePartTime = new javax.swing.JToggleButton();
        AddEmployeeDeductionRate = new javax.swing.JLabel();
        AddEmployeeDeductionRateTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        LocationLabel = new javax.swing.JLabel();
        AddEmployeeButton = new javax.swing.JButton();
        Location0Button = new javax.swing.JToggleButton();
        Location1Button = new javax.swing.JToggleButton();
        Location2Button = new javax.swing.JToggleButton();

        FullTimeEmployeeDialogBox.setTitle("ADD FULL TIME EMPLOYEE");

        FullTimeEmployeeWindowLabel.setText("Yearly Salary:");


        FullTimeEmployeeWindowButton.setText("Confirm");
        FullTimeEmployeeWindowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FullTimeEmployeeWindowButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FullTimeEmployeeDialogBoxLayout = new javax.swing.GroupLayout(FullTimeEmployeeDialogBox.getContentPane());
        FullTimeEmployeeDialogBox.getContentPane().setLayout(FullTimeEmployeeDialogBoxLayout);
        FullTimeEmployeeDialogBoxLayout.setHorizontalGroup(
            FullTimeEmployeeDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FullTimeEmployeeDialogBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FullTimeEmployeeDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FullTimeEmployeeDialogBoxLayout.createSequentialGroup()
                        .addComponent(FullTimeEmployeeWindowLabel)
                        .addGap(18, 18, 18)
                        .addComponent(FullTimeEmployeeWindowYearlySalary, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FullTimeEmployeeDialogBoxLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(FullTimeEmployeeWindowButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FullTimeEmployeeDialogBoxLayout.setVerticalGroup(
            FullTimeEmployeeDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FullTimeEmployeeDialogBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FullTimeEmployeeDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FullTimeEmployeeWindowLabel)
                    .addComponent(FullTimeEmployeeWindowYearlySalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(FullTimeEmployeeWindowButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PartTimeEmployeeDialogBox.setTitle("ADD PART TIME EMPLOYEE");

        PartTimeEmployeeWindowLabel1.setText("Hourly Wage:");

        PartTimeEmployeeWindowButton.setText("Confirm");
        PartTimeEmployeeWindowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PartTimeEmployeeWindowButtonActionPerformed(evt);
            }
        });

        PartTimeEmployeeWindowLabel2.setText("Hours Per Week:");

        PartTimeEmployeeWindowLabel3.setText("Weeks Per Year:");

        javax.swing.GroupLayout PartTimeEmployeeDialogBoxLayout = new javax.swing.GroupLayout(PartTimeEmployeeDialogBox.getContentPane());
        PartTimeEmployeeDialogBox.getContentPane().setLayout(PartTimeEmployeeDialogBoxLayout);
        PartTimeEmployeeDialogBoxLayout.setHorizontalGroup(
            PartTimeEmployeeDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PartTimeEmployeeDialogBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PartTimeEmployeeDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PartTimeEmployeeDialogBoxLayout.createSequentialGroup()
                        .addComponent(PartTimeEmployeeWindowLabel3)
                        .addGap(20, 20, 20)
                        .addComponent(PartTimeEmployeeWeeksPerYear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PartTimeEmployeeDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PartTimeEmployeeDialogBoxLayout.createSequentialGroup()
                            .addComponent(PartTimeEmployeeWindowLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PartTimeEmployeeWindowHourlyWage, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PartTimeEmployeeDialogBoxLayout.createSequentialGroup()
                            .addComponent(PartTimeEmployeeWindowLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(PartTimeEmployeeWindowHoursPerWeek, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PartTimeEmployeeDialogBoxLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(PartTimeEmployeeWindowButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PartTimeEmployeeDialogBoxLayout.setVerticalGroup(
            PartTimeEmployeeDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PartTimeEmployeeDialogBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PartTimeEmployeeDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PartTimeEmployeeWindowLabel1)
                    .addComponent(PartTimeEmployeeWindowHourlyWage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PartTimeEmployeeDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PartTimeEmployeeWindowLabel2)
                    .addComponent(PartTimeEmployeeWindowHoursPerWeek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(PartTimeEmployeeDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PartTimeEmployeeDialogBoxLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PartTimeEmployeeWindowLabel3))
                    .addGroup(PartTimeEmployeeDialogBoxLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(PartTimeEmployeeWeeksPerYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(PartTimeEmployeeWindowButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EMS");

        BarOfTabs.setMinimumSize(new java.awt.Dimension(170, 350));

        SearchEmployeeEmployeeID.setText("Employee ID:");

        SearchEmployeeTextArea.setColumns(20);
        SearchEmployeeTextArea.setRows(5);
        jScrollPane2.setViewportView(SearchEmployeeTextArea);

        EditEmployee.setText("Edit Employee");
        EditEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	EditEmployeeButtonActionPerformed(evt);
            }
        });

        RemoveEmployee.setText("Remove Employee");
        RemoveEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	RemoveEmployeeButtonActionPerformed(evt);
            }
        });

        SearchEmployeeSearchButton.setText("Search");
        SearchEmployeeSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	SearchEmployeeSearchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SearchEmployeeLayout = new javax.swing.GroupLayout(SearchEmployee);
        SearchEmployee.setLayout(SearchEmployeeLayout);
        SearchEmployeeLayout.setHorizontalGroup(
            SearchEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SearchEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SearchEmployeeLayout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(SearchEmployeeLayout.createSequentialGroup()
                        .addGroup(SearchEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SearchEmployeeLayout.createSequentialGroup()
                                .addComponent(EditEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RemoveEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(SearchEmployeeLayout.createSequentialGroup()
                                .addComponent(SearchEmployeeEmployeeID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SearchEmployeeEmployeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SearchEmployeeSearchButton)))
                        .addGap(0, 10, Short.MAX_VALUE))))
        );
        SearchEmployeeLayout.setVerticalGroup(
            SearchEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SearchEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchEmployeeEmployeeID)
                    .addComponent(SearchEmployeeEmployeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchEmployeeSearchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SearchEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditEmployee)
                    .addComponent(RemoveEmployee))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        BarOfTabs.addTab("Search Employee", SearchEmployee);

        DisplayEmployeeTextArea.setColumns(20);
        DisplayEmployeeTextArea.setRows(5);
        jScrollPane3.setViewportView(DisplayEmployeeTextArea);

        DisplayEmployeeRefreshButton.setText("Refresh");
        DisplayEmployeeRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayEmployeeRefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DisplayEmployeeLayout = new javax.swing.GroupLayout(DisplayEmployee);
        DisplayEmployee.setLayout(DisplayEmployeeLayout);
        DisplayEmployeeLayout.setHorizontalGroup(
            DisplayEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DisplayEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(DisplayEmployeeLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(DisplayEmployeeRefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DisplayEmployeeLayout.setVerticalGroup(
            DisplayEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DisplayEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DisplayEmployeeRefreshButton)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        BarOfTabs.addTab("Display Employee", DisplayEmployee);

        AddEmployee.setName(""); // NOI18N

        AddEmployeeFirstName.setText("First Name:");

        AddEmployeeLastName.setText("Last Name: ");

        AddEmployeeEmployeeID.setText("Employee ID:");

        Gender.add(AddEmployeeMale);
        AddEmployeeMale.setText("Male");
        AddEmployeeMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddEmployeeMaleActionPerformed(evt);
            }
        });

        Gender.add(AddEmployeeFemale);
        AddEmployeeFemale.setText("Female");

        AddEmployeeGender.setText("Gender: ");

        AddEmployeeWorkTime.setText("Work Time:");

        Work_Time.add(AddEmployeeFullTime);
        AddEmployeeFullTime.setText("Full-Time");

        Work_Time.add(AddEmployeePartTime);
        AddEmployeePartTime.setText("Part-Time");

        AddEmployeeDeductionRate.setText("Deduction Rate: ");

        jLabel4.setText("%");

        LocationLabel.setText("Location:");

        AddEmployeeButton.setText("Add Employee");
        AddEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddEmployeeButtonActionPerformed(evt);
            }
        });

        Location.add(Location0Button);
        Location0Button.setText("0");

        Location.add(Location1Button);
        Location1Button.setText("1");

        Location.add(Location2Button);
        Location2Button.setText("2");

        javax.swing.GroupLayout AddEmployeeLayout = new javax.swing.GroupLayout(AddEmployee);
        AddEmployee.setLayout(AddEmployeeLayout);
        AddEmployeeLayout.setHorizontalGroup(
            AddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddEmployeeLayout.createSequentialGroup()
                        .addComponent(AddEmployeeFirstName)
                        .addGap(18, 18, 18)
                        .addComponent(AddEmployeeFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AddEmployeeLayout.createSequentialGroup()
                            .addComponent(AddEmployeeEmployeeID)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AddEmployeeEmployeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AddEmployeeLayout.createSequentialGroup()
                            .addComponent(AddEmployeeLastName)
                            .addGap(16, 16, 16)
                            .addComponent(AddEmployeeLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AddEmployeeLayout.createSequentialGroup()
                            .addComponent(AddEmployeeDeductionRate)
                            .addGap(9, 9, 9)
                            .addComponent(AddEmployeeDeductionRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel4)))
                    .addGroup(AddEmployeeLayout.createSequentialGroup()
                        .addGroup(AddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddEmployeeGender)
                            .addComponent(AddEmployeeWorkTime)
                            .addComponent(LocationLabel))
                        .addGap(18, 18, 18)
                        .addGroup(AddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddEmployeeLayout.createSequentialGroup()
                                .addComponent(Location0Button)
                                .addGap(18, 18, 18)
                                .addComponent(Location1Button)
                                .addGap(18, 18, 18)
                                .addComponent(Location2Button))
                            .addGroup(AddEmployeeLayout.createSequentialGroup()
                                .addComponent(AddEmployeeFullTime)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AddEmployeePartTime))
                            .addGroup(AddEmployeeLayout.createSequentialGroup()
                                .addComponent(AddEmployeeMale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AddEmployeeFemale))
                            .addComponent(AddEmployeeButton))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AddEmployeeLayout.setVerticalGroup(
            AddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddEmployeeFirstName)
                    .addComponent(AddEmployeeFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddEmployeeLastName)
                    .addComponent(AddEmployeeLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddEmployeeEmployeeID)
                    .addComponent(AddEmployeeEmployeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddEmployeeMale)
                    .addComponent(AddEmployeeFemale)
                    .addComponent(AddEmployeeGender))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LocationLabel)
                    .addComponent(Location0Button)
                    .addComponent(Location1Button)
                    .addComponent(Location2Button))
                .addGap(7, 7, 7)
                .addGroup(AddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AddEmployeeDeductionRate)
                        .addComponent(AddEmployeeDeductionRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddEmployeeLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddEmployeeWorkTime)
                    .addGroup(AddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AddEmployeeFullTime)
                        .addComponent(AddEmployeePartTime)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AddEmployeeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BarOfTabs.addTab("Add Employee", AddEmployee);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BarOfTabs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BarOfTabs, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddEmployeeMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddEmployeeMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddEmployeeMaleActionPerformed

    private void AddEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddEmployeeButtonActionPerformed
    //random variables



    //code to get gender as int
       if (AddEmployeeMale.isSelected()){
           gender = 0; // gender 0 = Male
       }
       else {
           gender = 1; // gender 1 = Female
        }
    //code to get location as int
       
       if (Location0Button.isSelected()){
           locationTempVariable = 0;
       }
       else if (Location1Button.isSelected()){
           locationTempVariable = 1;
       }
       else{
           locationTempVariable = 2;
       }
       if (Employees.find(Integer.parseInt(AddEmployeeEmployeeIDTextField.getText()))!=null)
       {
       		Object[] options = {"Yes", "No"};
       		if (editing == 1)
       		{
       			if (AddEmployeeFullTime.isSelected()){
	     	           FullTimeEmployeeDialogBox.setVisible(true);
	     	           FullTimeEmployeeDialogBox.setSize(300, 150);
	     	          FullTimeEmployeeWindowYearlySalary.setText(Double.toString(tempfulltimeys));
	     	           //System.out.println(Employee.GetEmployeeFirstName());
	     	       }
	     	       else {
	     	           PartTimeEmployeeDialogBox.setVisible(true);
	     	           PartTimeEmployeeDialogBox.setSize(300, 200);
	     	          PartTimeEmployeeWindowHourlyWage.setText(Double.toString(tempparttime1));   
		     	       PartTimeEmployeeWindowHoursPerWeek.setText(Double.toString(tempparttime2));
		     	       PartTimeEmployeeWeeksPerYear.setText(Integer.toString(tempparttime3));
	     	       }
       		}
       		else 
       		{
       		int n = JOptionPane.showOptionDialog(null,  "There is already an employee with that ID. Would you like to edit it?", "Warning",
    JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);
	       		if (n == 0)
	       		{
		       		if (AddEmployeeFullTime.isSelected())
		       		{
		       			FullTimeEmployeeDialogBox.setVisible(true);
		       			FullTimeEmployeeDialogBox.setSize(300, 150);
			     	       //System.out.println(Employee.GetEmployeeFirstName());
			     	    FullTimeEmployeeWindowYearlySalary.setText(Double.toString(tempfulltimeys));
		     	    }
		     	    else 
		     	    {
	     	           PartTimeEmployeeDialogBox.setVisible(true);
	     	           PartTimeEmployeeDialogBox.setSize(300, 200);
		     	       PartTimeEmployeeWindowHourlyWage.setText(Double.toString(tempparttime1));   
		     	       PartTimeEmployeeWindowHoursPerWeek.setText(Double.toString(tempparttime2));
		     	       PartTimeEmployeeWeeksPerYear.setText(Integer.toString(tempparttime3));
		     	    }
	       		}
	       	}
       }
       else
       {
    	   if (AddEmployeeFullTime.isSelected())
      		{
      			FullTimeEmployeeDialogBox.setVisible(true);
    	        FullTimeEmployeeDialogBox.setSize(300, 150);
    	        //System.out.println(Employee.GetEmployeeFirstName());
    	    }
    	    else 
    	    {
	           PartTimeEmployeeDialogBox.setVisible(true);
	           PartTimeEmployeeDialogBox.setSize(300, 200);
    	    }
       }
    }
         
    private void saveFile (String text){
    	try (PrintWriter out = new PrintWriter("save.txt")) {
    	    out.print(text);
    	} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
    }
    
    private void FullTimeEmployeeWindowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FullTimeEmployeeWindowButtonActionPerformed
        
        YearlySalary = Double.parseDouble(FullTimeEmployeeWindowYearlySalary.getText());
        FullTimeEmployeeDialogBox.setVisible(false);
        Employee = new FullTimeEmployee(AddEmployeeFirstNameTextField.getText(),AddEmployeeLastNameTextField.getText(),Integer.parseInt(AddEmployeeEmployeeIDTextField.getText()),gender,locationTempVariable,Double.parseDouble(AddEmployeeDeductionRateTextField.getText()),YearlySalary);
        FullTimeEmployeeWindowYearlySalary.setText("");
        AddEmployeeFirstNameTextField.setText("");
        AddEmployeeLastNameTextField.setText("");
        AddEmployeeEmployeeIDTextField.setText("");
        AddEmployeeDeductionRateTextField.setText("");
        
            //append("save.txt",Employee.toString());
        Employees.remove(Employee.GetEmployeeID());
        Employees.add(Employee);
        saveFile(Employees.listEmployees());
        System.out.println(Employee.toString());
        Employees.display();
        editing = 0;

        ClearButtons();


    }//GEN-LAST:event_FullTimeEmployeeWindowButtonActionPerformed

    private void PartTimeEmployeeWindowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PartTimeEmployeeWindowButtonActionPerformed
        HourlyWage = Double.parseDouble(PartTimeEmployeeWindowHourlyWage.getText());
        HoursPerWeek = Double.parseDouble(PartTimeEmployeeWindowHoursPerWeek.getText());
        WeeksPerYear = Integer.parseInt(PartTimeEmployeeWeeksPerYear.getText());
        PartTimeEmployeeDialogBox.setVisible(false);

        Employee = new PartTimeEmployee(AddEmployeeFirstNameTextField.getText(),AddEmployeeLastNameTextField.getText(),Integer.parseInt(AddEmployeeEmployeeIDTextField.getText()),gender,locationTempVariable,Double.parseDouble(AddEmployeeDeductionRateTextField.getText()),HourlyWage, HoursPerWeek,WeeksPerYear);
        FullTimeEmployeeWindowYearlySalary.setText("");
        AddEmployeeFirstNameTextField.setText("");
        AddEmployeeLastNameTextField.setText("");
        AddEmployeeEmployeeIDTextField.setText("");
        AddEmployeeDeductionRateTextField.setText("");
        
        
        Employees.remove(Employee.GetEmployeeID());
        Employees.add(Employee);
        saveFile(Employees.listEmployees());
        //append("save.txt",Employee.toString());
        System.out.println(Employee.toString());
        Employees.display();
        editing = 0;

        ClearButtons();
    }//GEN-LAST:event_PartTimeEmployeeWindowButtonActionPerformed
    
    private void ClearButtons()
    {
    	Location.clearSelection();
    	Gender.clearSelection();
    	Work_Time.clearSelection();
        tempparttime1 = 0;
        tempparttime2 = 0;
        tempparttime3 = 0;
        tempfulltimeys = 0;
    }

    
    private void SearchEmployeeSearchButtonActionPerformed (java.awt.event.ActionEvent evt){
    	String text = "";
    	String[] textarray;
    	String finalText = "";
    	Employee = Employees.find(Integer.parseInt(SearchEmployeeEmployeeIDTextField.getText()));
    	if (Employees.find(Integer.parseInt(SearchEmployeeEmployeeIDTextField.getText()))!=null)
    	{
    		text = Employees.find(Integer.parseInt(SearchEmployeeEmployeeIDTextField.getText())).toString();
    		//1,test1,test1,1,0,0,3.0,4.0
    		textarray = text.split(",");
    		finalText = ("First name: " + textarray[1] + "\n" +
    				"Last name: " + textarray[2] + "\n" + 
    				"ID: " + textarray[3] + "\n");
    		if (Integer.parseInt(textarray[4]) == 1)
    		{
    			finalText += ("Gender: Female");
    		}
    		else if (Integer.parseInt(textarray[4]) == 0)
    		{
    			finalText += ("Gender: Male");
    		}
    		finalText += ("\n" + "Location: " + textarray[5] + "\n");
    		
    		//if fulltime
    		if (Integer.parseInt(textarray[0]) != 1)
    		{
    			finalText += ("Part-Time \n");
    		}
    		else
    		{
    			finalText += ("Full-Time \n");
    		}
    		
    		//finalText += ("Net Income: " + (HourlyWage * HoursPerWeek * WeeksPerYear * (1 - GetDeductionRate()*100);)))
			finalText += ("Net Income: $" + Employee.CalculateNetIncome());

    		
    		
    		SearchEmployeeTextArea.setText(finalText);	
    	}
    	else {
    		SearchEmployeeTextArea.setText("Employee not found.");
    	}
    }
    
    private void RemoveEmployeeButtonActionPerformed (java.awt.event.ActionEvent evt)
    {
    	if (Employees.remove(Integer.parseInt(SearchEmployeeEmployeeIDTextField.getText())) != null){
    		SearchEmployeeTextArea.setText("Employee ID " + SearchEmployeeEmployeeIDTextField.getText() + " has been removed.");
    		SearchEmployeeEmployeeIDTextField.setText("");
    		saveFile(Employees.listEmployees());
    	}
    	else
    	{
    		SearchEmployeeTextArea.setText("Employee not found.");
    	}
    }

    
    private void EditEmployeeButtonActionPerformed (java.awt.event.ActionEvent evt)
    {
    	editing = 1;
    	Employee = Employees.find(Integer.parseInt(SearchEmployeeEmployeeIDTextField.getText()));
    	if (Employee != null)
    	{
    		BarOfTabs.setSelectedIndex(2);
    		AddEmployeeFirstNameTextField.setText(Employee.GetEmployeeFirstName());
            AddEmployeeLastNameTextField.setText(Employee.GetEmployeeLastName());
            AddEmployeeEmployeeIDTextField.setText(Integer.toString(Employee.GetEmployeeID()));
            AddEmployeeDeductionRateTextField.setText(Double.toString(Employee.GetDeductionRate()));
            //System.out.println(Employee.GetGender());
            if (Employee.GetGender() == 0){
            	AddEmployeeMale.setSelected(true);
            }
            else
            {
            	AddEmployeeFemale.setSelected(true);
            }
            switch (Employee.GetLocation())
            {
            case 0: 
            	Location0Button.setSelected(true);
            	break;
            
            case 1: 
            	Location1Button.setSelected(true);
            	break;
            	
            case 2:
            	Location2Button.setSelected(true);
            	break;
            }
            if (Integer.parseInt(Employee.toString().split(",")[0]) == 1){
            	AddEmployeeFullTime.setSelected(true);
            	tempfulltimeys = Double.parseDouble(Employee.toString().split(",")[7]);
            }
            else
            {
            	AddEmployeePartTime.setSelected(true);
            	tempparttime1 = Double.parseDouble(Employee.toString().split(",")[7]);
            	tempparttime2 = Double.parseDouble(Employee.toString().split(",")[8]);
            	tempparttime3 = Integer.parseInt(Employee.toString().split(",")[9]);
            }
    	}
    	else
    	{
    		SearchEmployeeTextArea.setText("Employee not found.");
    	}
    }

    private void DisplayEmployeeRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayEmployeeRefreshButtonActionPerformed
    	Employees.display();
    	DisplayEmployeeTextArea.setText(EmployeeManagementSystem.displayText);
    }//GEN-LAST:event_DisplayEmployeeRefreshButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddEmployee;
    private javax.swing.JButton AddEmployeeButton;
    private javax.swing.JLabel AddEmployeeDeductionRate;
    private javax.swing.JTextField AddEmployeeDeductionRateTextField;
    private javax.swing.JLabel AddEmployeeEmployeeID;
    private javax.swing.JTextField AddEmployeeEmployeeIDTextField;
    private javax.swing.JToggleButton AddEmployeeFemale;
    private javax.swing.JLabel AddEmployeeFirstName;
    private javax.swing.JTextField AddEmployeeFirstNameTextField;
    private javax.swing.JToggleButton AddEmployeeFullTime;
    private javax.swing.JLabel AddEmployeeGender;
    private javax.swing.JLabel AddEmployeeLastName;
    private javax.swing.JTextField AddEmployeeLastNameTextField;
    private javax.swing.JToggleButton AddEmployeeMale;
    private javax.swing.JToggleButton AddEmployeePartTime;
    private javax.swing.JLabel AddEmployeeWorkTime;
    private javax.swing.JTabbedPane BarOfTabs;
    private javax.swing.JPanel DisplayEmployee;
    private javax.swing.JButton DisplayEmployeeRefreshButton;
    private javax.swing.JTextArea DisplayEmployeeTextArea;
    private javax.swing.JButton EditEmployee;
    private javax.swing.JDialog FullTimeEmployeeDialogBox;
    private javax.swing.JButton FullTimeEmployeeWindowButton;
    private javax.swing.JLabel FullTimeEmployeeWindowLabel;
    private javax.swing.JTextField FullTimeEmployeeWindowYearlySalary;
    private javax.swing.ButtonGroup Gender;
    private javax.swing.ButtonGroup Location;
    private javax.swing.JToggleButton Location0Button;
    private javax.swing.JToggleButton Location1Button;
    private javax.swing.JToggleButton Location2Button;
    private javax.swing.JLabel LocationLabel;
    private javax.swing.JDialog PartTimeEmployeeDialogBox;
    private javax.swing.JTextField PartTimeEmployeeWeeksPerYear;
    private javax.swing.JButton PartTimeEmployeeWindowButton;
    private javax.swing.JTextField PartTimeEmployeeWindowHourlyWage;
    private javax.swing.JTextField PartTimeEmployeeWindowHoursPerWeek;
    private javax.swing.JLabel PartTimeEmployeeWindowLabel1;
    private javax.swing.JLabel PartTimeEmployeeWindowLabel2;
    private javax.swing.JLabel PartTimeEmployeeWindowLabel3;
    private javax.swing.JButton RemoveEmployee;
    private javax.swing.JPanel SearchEmployee;
    private javax.swing.JLabel SearchEmployeeEmployeeID;
    private javax.swing.JTextField SearchEmployeeEmployeeIDTextField;
    private javax.swing.JButton SearchEmployeeSearchButton;
    private javax.swing.JTextArea SearchEmployeeTextArea;
    private javax.swing.ButtonGroup Work_Time;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
